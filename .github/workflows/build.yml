name: U-Boot CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      board_name:
        description: 'Board name to build (e.g.: cdp, ap4220, all for all boards)'
        required: false
        default: 'all'

env:
  UBOOT_DIR: uboot
  TZ: Asia/Shanghai
  BOARD_NAME: "all"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout U-Boot repository
      uses: actions/checkout@v4
      with:
        path: uboot-ipq40xx
        submodules: recursive

    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get install -y tzdata build-essential git make gcc bison flex \
          libssl-dev bc u-boot-tools xxd zip ccache gh

        # Set timezone once
        sudo ln -fs /usr/share/zoneinfo/$TZ /etc/localtime

        # Setup ccache
        echo "/usr/lib/ccache" >> $GITHUB_PATH
        mkdir -p ~/.ccache
        echo "max_size = 2G" > ~/.ccache/ccache.conf

    - name: Cache and setup toolchain
      uses: actions/cache@v3
      with:
        path: openwrt-sdk-ipq806x-qsdk53
        key: ${{ runner.os }}-qsdk-toolchain-${{ hashFiles('uboot-ipq40xx/Makefile') }}
        restore-keys: |
          ${{ runner.os }}-qsdk-toolchain-

    - name: Checkout QSDK toolchain
      if: steps.cache-toolchain.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: 1980490718/openwrt-sdk-ipq806x-qsdk53
        path: openwrt-sdk-ipq806x-qsdk53

    - name: Configure build environment
      id: config
      run: |
        # Set date variables
        current_date=$(date +'%Y.%m.%d')
        current_datetime=$(date +'%Y-%m-%d %H:%M:%S')
        today_iso=$(date +'%Y-%m-%d')

        echo "BUILD_DATE=${current_date}" >> $GITHUB_ENV
        echo "BUILD_DATETIME=${current_datetime}" >> $GITHUB_ENV
        echo "TODAY_ISO=${today_iso}" >> $GITHUB_ENV

        # Setup toolchain
        STAGING_DIR="$GITHUB_WORKSPACE/openwrt-sdk-ipq806x-qsdk53/staging_dir"
        TOOLCHAIN_PATH="$STAGING_DIR/toolchain-arm_cortex-a7_gcc-4.8-linaro_uClibc-1.0.14_eabi"

        echo "$TOOLCHAIN_PATH/bin:$STAGING_DIR/host/bin" >> $GITHUB_PATH
        echo "STAGING_DIR=$STAGING_DIR" >> $GITHUB_ENV

    - name: Build U-Boot
      working-directory: ./uboot-ipq40xx
      run: |
        # Simple build info
        echo "Build started: $BUILD_DATETIME ($TZ)" > build-info.txt

        # Build command
        if [[ "${{ github.event.inputs.board_name }}" != "" && "${{ github.event.inputs.board_name }}" != "all" ]]; then
          ./build.sh "${{ github.event.inputs.board_name }}"
        elif [[ -n "$BOARD_NAME" && "$BOARD_NAME" != "" ]]; then
          ./build.sh "$BOARD_NAME"
        else
          ./build.sh all
        fi

        echo "Build completed: $(date +'%Y-%m-%d %H:%M:%S')" >> build-info.txt

    - name: Archive artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: u-boot-artifacts-${{ env.BUILD_DATE }}
        path: |
          uboot-ipq40xx/bin/*.bin
          uboot-ipq40xx/bin/*.elf
          uboot-ipq40xx/bin/*.md5
          uboot-ipq40xx/bin/*.zip
          uboot-ipq40xx/build-info.txt
        retention-days: 90

    - name: Upload build logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-${{ env.BUILD_DATE }}
        path: |
          uboot-ipq40xx/*.log
        retention-days: 3
        if-no-files-found: ignore

    - name: Upload ccache stats
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ccache-stats-${{ env.BUILD_DATE }}
        path: ~/.ccache/ccache.conf
        retention-days: 3

    - name: Get commit info
      if: success() && github.event_name == 'push'
      id: commits
      working-directory: ./uboot-ipq40xx
      run: |
        # Get complete commit history
        git fetch --unshallow || true
        git fetch --all || true

        # Get all commits for today
        TODAY_START="$TODAY_ISO 00:00:00"
        TODAY_END="$TODAY_ISO 23:59:59"

        # Simple commit log
        COMMITS=$(git log --since="$TODAY_START" --until="$TODAY_END" --pretty="- **%h**: %s" 2>/dev/null || git log --since="24 hours ago" --pretty="- **%h**: %s" || echo "- **${{ github.sha }}**: Current commit")

        # Detailed commit log
        DETAILED_LOG=$(git log --since="$TODAY_START" --until="$TODAY_END" --pretty="**Commit ID:** %H%n**Time:** %ai%n**Subject:** %s%n**Details:**%n%b%n---%n" 2>/dev/null || git log --since="24 hours ago" --pretty="**Commit ID:** %H%n**Time:** %ai%n**Subject:** %s%n**Details:**%n%b%n---%n" || echo "No commits found in the last 24 hours")

        echo "commits<<EOF" >> $GITHUB_OUTPUT
        echo "$COMMITS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

        echo "detailed_log<<EOF" >> $GITHUB_OUTPUT
        echo "$DETAILED_LOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Check and delete existing release for today
      if: success() && github.event_name == 'push'
      working-directory: ./uboot-ipq40xx
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Define today's release tag
        TODAY_TAG="v${{ env.BUILD_DATE }}"

        # Check if release exists
        echo "Checking for existing release with tag: $TODAY_TAG"
        if gh release view "$TODAY_TAG" > /dev/null 2>&1; then
          echo "Release $TODAY_TAG exists, deleting it..."
          gh release delete "$TODAY_TAG" --yes
          # Also delete the tag if it exists
          if git ls-remote --tags origin "refs/tags/$TODAY_TAG" > /dev/null 2>&1; then
            echo "Tag $TODAY_TAG exists, deleting it..."
            git push origin --delete "refs/tags/$TODAY_TAG"
          fi
        else
          echo "No existing release with tag: $TODAY_TAG"
        fi

    - name: Create Release
      if: success() && github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          uboot-ipq40xx/bin/*.zip
        tag_name: "v${{ env.BUILD_DATE }}"
        name: "U-Boot Build ${{ env.BUILD_DATE }}"
        body: |
          Automated U-Boot build for IPQ40xx platforms
          Built on: ${{ env.BUILD_DATETIME }} (UTC+8)
          Branch: ${{ github.ref_name }}
          Latest commit: ${{ github.sha }}
          Today's commits details:
          ${{ steps.commits.outputs.detailed_log }}
          Note: Build artifacts are retained for 90 days.
        draft: false
        prerelease: false